from portscanner import portscan


targets_ip = input('[+] * Enter Target To Scan For Vulnerable Open Ports: ')
port_number = int(input('[+] * Enter Amount Of Ports You Want To Scan (500 - First 500 Ports): '))
vul_file = input('[+] * Enter Path To The File With Vulnerable Softwares: ')
print('\n')

# Create a port scanner object "target" with the specified IP and port number
target = portscan(targets_ip, port_number)
# Call the scan() function to perform the port scanning
target.scan()

# Open the vulnerability file in read mode
with open(vul_file, 'r') as file:
    # Initialize a counter to track the current banner and its corresponding open port
    count = 0
    # Iterate over each banner obtained from the scan
    for banner in target.banners:
        # Reset file pointer to the beginning for each new banner
        file.seek(0)
        # Iterate over each line in the vulnerability file
        for line in file.readlines():
            # Check if the current line (stripped of whitespace) is in the banner
            if line.strip() in banner:
                # If a match is found, print the vulnerable banner and the corresponding open port
                print(f'[!!] VULNERABLE BANNER: "{banner}" ON PORT: {target.open_ports[count]}')
        # Increment the counter to move to the next banner and open port
        count += 1

# Check open ports against known vulnerable ports
with open(vul_file, 'r') as file:
    for open_port in target.open_ports:
        file.seek(0)
        for line in file.readlines():
            if f"Port {open_port}:" in line:
                print(f'[!!] VULNERABLE PORT: "{open_port}" - {line.strip()}')